{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/vmikk/NextITS/main/nextflow_schema.json",
  "title": "NextITS pipeline parameters",
  "description": "Pipeline to process fungal ITS amplicons sequenced with PacBio",
  "type": "object",
  "definitions": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data.",
      "required": [ ],
      "properties": {
        "input": {
          "type": "string",
          "format": "path",
          "exists": true,
          "mimetype": "text/csv",
          "description": "Path to input data: either a single FASTQ or BAM file containing multiplexed sequences, or a directory containing pre-demultiplexed FASTQ files.",
          "fa_icon": "fas fa-file-csv"
        },
        "barcodes": {
          "type": "string",
          "fa_icon": "fas fa-barcode",
          "description": "Path to the file with barcodes (in FASTA format) used for demultiplexing the input data."
        },
        "outdir": {
          "type": "string",
          "format": "directory-path",
          "description": "Path to the directory where the analysis results will be saved.",
          "fa_icon": "fas fa-folder-open",
          "default": "results"
        },
        "step": {
          "type": "string",
          "enum": ["Step1", "Step2"],
          "description": "The step of the pipeline to run.",
          "fa_icon": "fas fa-step-forward"
        }
      }
    },
    "demultiplexing": {
      "title": "Demultiplexing",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "lima_barcodetype": {
          "type": "string",
          "default": "dual_symmetric",
          "fa_icon": "fab fa-slack-hash",
          "description": "Barcode configuration type used for multiplexing samples: 'single' if only one of the primers was tagged, 'dual_symmetric' if identical barcodes were used, 'dual_asymmetric' if different barcodes were used, 'dual' if both primers were tagged with a mixture of identical and different barcodes",
          "enum": ["single", "dual", "dual_symmetric", "dual_asymmetric"]
        },
        "lima_minscore": {
          "type": "integer",
          "default": 93,
          "minimum": 0,
          "maximum": 100,
          "fa_icon": "fas fa-balance-scale-left",
          "description": "Minimum barcode score (0-100) required for successful demultiplexing. Higher values mean stricter matching."
        },
        "lima_minendscore": {
          "type": "integer",
          "default": 50,
          "fa_icon": "fas fa-balance-scale-right",
          "description": "Minimum second barcode score (only for asymmetric and dual barcoding scheme)",
          "minimum": 0,
          "maximum": 100
        },
        "lima_minrefspan": {
          "type": "number",
          "default": 0.75,
          "fa_icon": "fas fa-random",
          "description": "Minimum read span relative to the barcode length",
          "minimum": 0,
          "maximum": 1
        },
        "lima_minscoringregions": {
          "type": "integer",
          "default": 2,
          "fa_icon": "fas fa-angle-down",
          "description": "Number of barcodes scored required for demultiplexing using dual barcodes",
          "minimum": 1,
          "maximum": 2
        },
        "lima_windowsize": {
          "type": "integer",
          "default": 70,
          "fa_icon": "fas fa-arrows-alt-h",
          "description": "Window size for barcode lookup, in base pairs",
          "minimum": 1
        },
        "lima_minlen": {
          "type": "integer",
          "default": 40,
          "fa_icon": "fas fa-compress-alt",
          "description": "Minimum sequence length after clipping barcodes.",
          "minimum": 1
        },
        "lima_remove_unknown": {
          "type": "boolean",
          "default": false,
          "fa_icon": "fas fa-compress-alt",
          "description": "Remove unknown barcode combinations from the demultiplexed data (if false, unknown combinations will be named as tag IDs)."
        },
        "demultiplexed": {
          "type": "boolean",
          "fa_icon": "fas fa-align-justify",
          "description": "Whether input is multiplexed (`false`, single FASTQ file) or pre-demultiplexed (`true`, multiple FASTQ files)."
        }
      },
      "fa_icon": "fas fa-tags"
    },
    "quality_control": {
      "title": "Quality Control",
      "type": "object",
      "description": "Sequence quality filtering",
      "default": "",
      "properties": {
        "qc_maxee": {
          "type": "number",
          "description": "Maximum expected errors allowed in a sequence. Sequences with higher error rates will be discarded.",
          "fa_icon": "fas fa-times"
        },
        "qc_maxeerate": {
          "type": "number",
          "default": 0.01,
          "description": "Maximum expected error rate per sequence (between 0 and 1). Sequences with higher error rates will be discarded.",
          "fa_icon": "fas fa-times"
        },
        "qc_maxhomopolymerlen": {
          "type": "integer",
          "default": 25,
          "description": "Threshold for a homopolymer region length in a sequence.",
          "fa_icon": "fas fa-redo"
        },
        "qc_maxn": {
          "type": "integer",
          "default": 4,
          "description": "Discard sequences with more than the specified number of ambiguous nucleotides (N's).",
          "fa_icon": "fas fa-minus-square"
        }
      },
      "fa_icon": "fas fa-trash-restore"
    },
    "primer_trimming": {
      "title": "Primer trimming",
      "type": "object",
      "description": "Removal of primer-artefacts and reorienting of reads",
      "default": "",
      "properties": {
        "primer_forward": {
          "type": "string",
          "fa_icon": "fas fa-arrow-right",
          "description": "Sequence of the forward primer.",
          "default": "TACACACCGCCCGTCG",
          "help_text": "**Forward Primer:** `ITS9MUNngs` with sequence `TACACACCGCCCGTCG`  \nRefer to [Tedersoo & Lindahl, 2016 DOI:`10.1111/1758-2229.12438`](https://ami-journals.onlinelibrary.wiley.com/doi/10.1111/1758-2229.12438) for more details on these primers.  "
        },
        "primer_reverse": {
          "type": "string",
          "fa_icon": "fas fa-arrow-left",
          "description": "Sequence of the reverse primer.",
          "default": "CCTSCSCTTANTDATATGC",
          "help_text": "**Reverse Primer:** `ITS4ngsUni` with sequence `CCTSCSCTTANTDATATGC`  \nRefer to [Tedersoo & Lindahl, 2016 DOI:`10.1111/1758-2229.12438`](https://ami-journals.onlinelibrary.wiley.com/doi/10.1111/1758-2229.12438) for more details on these primers.  "
        },
        "primer_mismatches": {
          "type": "integer",
          "default": 2,
          "fa_icon": "fas fa-chevron-circle-down",
          "description": "Allowed number of mismatches for primers."
        },
        "primer_foverlap": {
          "type": "integer",
          "fa_icon": "fas fa-angle-right",
          "description": "Minimum overlap for the forward primer.",
          "default": 15
        },
        "primer_roverlap": {
          "type": "integer",
          "fa_icon": "fas fa-angle-left",
          "description": "Minimum overlap for the reverse primer.",
          "default": 15
        }
      },
      "fa_icon": "fas fa-crop-alt"
    },
    "illumina_specific_parameters": {
      "title": "Illumina-specific parameters",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "seqplatform": {
          "type": "string",
          "default": "PacBio",
          "fa_icon": "fab fa-google-play"
        },
        "input_R1": {
          "type": "string"
        },
        "input_R2": {
          "type": "string"
        },
        "qc_avgphred": {
          "type": "boolean"
        },
        "qc_twocolor": {
          "type": "boolean"
        },
        "pe_minoverlap": {
          "type": "integer",
          "default": 20
        },
        "pe_diffperclimit": {
          "type": "integer",
          "default": 20
        },
        "pe_difflimit": {
          "type": "integer",
          "default": 5
        },
        "pe_nlimit": {
          "type": "integer",
          "default": 10
        },
        "pe_minlen": {
          "type": "integer",
          "default": 30
        },
        "illumina_keep_notmerged": {
          "type": "boolean",
          "default": true
        },
        "illumina_joinpadgap": {
          "type": "string",
          "default": "NNNNNNNNNN"
        },
        "illumina_joinpadqual": {
          "type": "string",
          "default": "IIIIIIIIII"
        },
        "barcode_errors": {
          "type": "integer",
          "default": 1
        },
        "barcode_window": {
          "type": "integer",
          "default": 30
        },
        "barcode_overlap": {
          "type": "integer",
          "default": 11
        },
        "trim_minlen": {
          "type": "integer",
          "default": 10
        },
        "qc_phredmin": {
          "type": "integer"
        },
        "qc_phredperc": {
          "type": "integer"
        },
        "qc_polyglen": {
          "type": "integer"
        }
      }
    },
    "chimera_removal": {
      "title": "Chimera removal",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "chimera_db": {
          "type": "string",
          "fa_icon": "fas fa-database",
          "default": "Eukaryome_1.9.3_241222_FullITS_100-800.udb",
          "description": "Database for refrence-based chimera removal"
        },
        "chimera_rescueoccurrence": {
          "type": "integer",
          "default": 2
        },
        "chimeranov_abskew": {
          "type": "number",
          "default": 2
        },
        "chimeranov_dn": {
          "type": "number",
          "default": 1.4
        },
        "chimeranov_mindiffs": {
          "type": "number",
          "default": 3
        },
        "chimeranov_mindiv": {
          "type": "number",
          "default": 0.8
        },
        "chimeranov_minh": {
          "type": "number",
          "default": 0.28
        },
        "chimeranov_xn": {
          "type": "number",
          "default": 8
        }
      },
      "fa_icon": "fas fa-trash-alt",
      "required": [ ]
    },
    "tag_jump_removal": {
      "title": "Tag-jump removal",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "tj_f": {
          "type": "number",
          "default": 0.01,
          "minimum": 0,
          "maximum": 1
        },
        "tj_p": {
          "type": "number",
          "default": 1
        },
        "otu_id": {
          "type": "number",
          "default": 0.98,
          "minimum": 0,
          "maximum": 1
        },
        "otu_iddef": {
          "type": "integer",
          "default": 2,
          "minimum": 0,
          "maximum": 4
        }
      }
    },
    "its_extraction": {
      "title": "ITS extraction",
      "type": "object",
      "description": "",
      "default": "",
      "properties": {
        "its_region": {
          "type": "string",
          "default": "full",
          "enum": [
            "full",
            "ITS1",
            "ITS2",
            "none",
            "ITS1_5.8S_ITS2",
            "SSU",
            "LSU"
          ],
          "description": "Target ITS region to extract: 'full' for complete ITS region, 'ITS1' or 'ITS2' for specific spacers, 'ITS1_5.8S_ITS2' for the partial ITS (in case of HMM profiles are not able to detect the full ITS region), 'SSU' or 'LSU' for 18S or 28S ribosomal genes, or 'none' to skip extraction (in this case, only the primers will be trimmed)",
          "fa_icon": "fas fa-arrows-alt-h"
        },
        "ITSx_tax": {
          "type": "string",
          "default": "all",
          "fa_icon": "fas fa-user-tag"
        },
        "ITSx_evalue": {
          "type": "number",
          "default": 0.1,
          "fa_icon": "fas fa-check-circle"
        },
        "ITSx_partial": {
          "type": "integer",
          "default": 0,
          "fa_icon": "fas fa-arrows-alt-h"
        },
        "ITSx_to_parquet": {
          "type": "boolean",
          "default": true,
          "fa_icon": "fas fa-database"
        }
      }
    },
    "homopolymer_correction": {
      "title": "Homopolymer correction",
      "type": "object",
      "description": "Correction of homopolymer errors",
      "default": "",
      "properties": {
        "hp": {
          "type": "boolean",
          "default": true,
          "description": "Enable homopolymer error correction in sequences"
        },
        "hp_similarity": {
          "type": "number",
          "default": 0.999,
          "minimum": 0.8,
          "maximum": 1,
          "description": "Sequence similarity threshold for pre-clustering during homopolymer error correction (0.8-1.0)"
        },
        "hp_iddef": {
          "type": "number",
          "default": 2,
          "minimum": 0,
          "maximum": 4
        }
      }
    },
    "step_2_options": {
      "title": "Step 2 options",
      "type": "object",
      "description": "Global dereplication, denoizing, and clustering",
      "default": "",
      "properties": {
        "data_path": {
          "type": "string",
          "format": "directory-path",
          "fa_icon": "fas fa-folder-open",
          "description": "Path to the Step-1 results.",
          "default": "Step1_Results"
        }
      },
      "fa_icon": "fab fa-draft2digital"
    },
    "generic_options": {
      "title": "Generic options",
      "type": "object",
      "fa_icon": "fas fa-file-import",
      "description": "Less common options for the pipeline, typically set in a config file.",
      "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
      "properties": {
        "version": {
          "type": "boolean",
          "description": "Display version and exit.",
          "fa_icon": "fas fa-question-circle",
          "hidden": true
        },
        "storagemode": {
          "type": "string",
          "default": "rellink",
          "fa_icon": "fas fa-boxes",
          "enum": ["symlink", "copy", "move", "rellink", "link"],
          "description": "How to store output files: 'symlink' for symbolic links, 'copy' to copy files, 'move' to move files, 'rellink' for relative links, 'link' for hard links"
        },
        "gzip_compression": {
          "type": "number",
          "default": 7,
          "minimum": 1,
          "maximum": 9,
          "fa_icon": "fas fa-file-archive",
          "description": "Controls GZIP compression level in output files."
        },
        "help": {
          "type": "boolean",
          "description": "Display help text.",
          "fa_icon": "fas fa-question-circle",
          "hidden": true
        },
        "helpMsg": {
          "type": "boolean",
          "fa_icon": "far fa-question-circle"
        },
        "monochrome_logs": {
          "type": "boolean",
          "description": "Do not use coloured log outputs.",
          "fa_icon": "fas fa-palette",
          "hidden": true
        },
        "validate_params": {
          "type": "boolean",
          "description": "Boolean whether to validate parameters against the schema at runtime",
          "default": true,
          "fa_icon": "fas fa-check-square",
          "hidden": true
        },
        "tracedir": {
          "type": "string",
          "fa_icon": "fas fa-folder-minus"
        },
        "show_hidden_params": {
          "type": "boolean",
          "description": "Show all params when using `--help`.",
          "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters.",
          "fa_icon": "fas fa-eye-slash"
        },
        "max_cpus": {
          "type": "integer",
          "default": 40,
          "fa_icon": "fas fa-microchip",
          "description": "Maximum number of CPUs that can be requested (for any single job).",
          "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`",
          "minimum": 1,
          "maximum": 200
        },
        "max_memory": {
          "type": "string",
          "default": "132.GB",
          "fa_icon": "fas fa-memory",
          "description": "Maximum amount of memory that can be requested (for any single job).",
          "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
          "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
        },
        "max_time": {
          "type": "string",
          "default": "240.h",
          "fa_icon": "fas fa-clock",
          "description": "Maximum amount of time that can be requested (for any single job).",
          "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
          "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
        },
        "schema_ignore_params": {
          "type": "string"
        }
      }
    },
    "uncategorized_unused": {
      "title": "Uncategorized/Unused",
      "type": "object",
      "description": "",
      "default": "",
      "fa_icon": "fas fa-unlink",
      "properties": {
        "enable_conda": {
          "type": "boolean",
          "fa_icon": "fas fa-adjust",
          "hidden": true
        },
        "email": {
          "type": "string",
          "description": "Email address for completion summary.",
          "fa_icon": "fas fa-envelope",
          "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
          "hidden": true
        },
        "email_on_fail": {
          "type": "string",
          "description": "Email address for completion summary, only when pipeline fails.",
          "fa_icon": "fas fa-exclamation-triangle",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
          "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
          "hidden": true
        },
        "plaintext_email": {
          "type": "boolean",
          "description": "Send plain-text email instead of HTML.",
          "fa_icon": "fas fa-remove-format",
          "hidden": true
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/definitions/input_output_options"
    },
    {
      "$ref": "#/definitions/demultiplexing"
    },
    {
      "$ref": "#/definitions/quality_control"
    },
    {
      "$ref": "#/definitions/primer_trimming"
    },
    {
      "$ref": "#/definitions/illumina_specific_parameters"
    },
    {
      "$ref": "#/definitions/chimera_removal"
    },
    {
      "$ref": "#/definitions/tag_jump_removal"
    },
    {
      "$ref": "#/definitions/its_extraction"
    },
    {
      "$ref": "#/definitions/homopolymer_correction"
    },
    {
      "$ref": "#/definitions/step_2_options"
    },
    {
      "$ref": "#/definitions/generic_options"
    },
    {
      "$ref": "#/definitions/uncategorized_unused"
    }
  ]
}
